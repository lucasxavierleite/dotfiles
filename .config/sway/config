# Read `man 5 sway` for a complete reference.

### PyWal

include "$HOME/.cache/wal/colors-sway"

### Variables

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show run
set $dmenu wofi --show drun -I

### Output configuration

output * background $wallpaper fill
output eDP-1 resolution 1920x1080 position 0,0
output HDMI-A-2 resolution 1920x1080 position 1920,0

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
client.focused $foreground $foreground $background $color7 $foreground
client.background $background

workspace 1 output eDP-1
workspace 2 output eDP-1
workspace 3 output eDP-1
workspace 4 output eDP-1
workspace 5 output eDP-1
workspace 6 output eDP-1
workspace 7 output eDP-1
workspace 8 output eDP-1
workspace 9 output eDP-1
workspace 10 output eDP-1
workspace 11 output HDMI-A-2
workspace 12 output HDMI-A-2
workspace 13 output HDMI-A-2
workspace 14 output HDMI-A-2
workspace 15 output HDMI-A-2
workspace 16 output HDMI-A-2
workspace 17 output HDMI-A-2
workspace 18 output HDMI-A-2
workspace 19 output HDMI-A-2
workspace 20 output HDMI-A-2
workspace 21 output HDMI-A-2
workspace 22 output HDMI-A-2

### Idle configuration

exec swayidle -w \
    timeout 300 'swaylock -f -c 000000' \
    timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# https://major.io/2022/05/24/sway-reload-causes-a-firefox-crash/

input type:touchpad {
    tap enabled
    natural_scroll enabled
}

#input type:keyboard {
    #xkb_layout us,br
    #xkb_options grp:alt_space_toggle
    #xkb_numlock enabled
#}

input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout us,br
    xkb_options grp:alt_space_toggle
    xkb_numlock enabled
}

### Key bindings

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+grave exec $dmenu
bindsym $mod+shift+grave exec $menu
# pt-BR keyboard layout
bindsym $mod+apostrophe exec $dmenu
bindsym $mod+shift+apostrophe exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Moving around:

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces:

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+f1 workspace number 11
bindsym $mod+f2 workspace number 12
bindsym $mod+f3 workspace number 13
bindsym $mod+f4 workspace number 14
bindsym $mod+f5 workspace number 15
bindsym $mod+f6 workspace number 16
bindsym $mod+f7 workspace number 17
bindsym $mod+f8 workspace number 18
bindsym $mod+f9 workspace number 19
bindsym $mod+f10 workspace number 20
bindsym $mod+f11 workspace number 21
bindsym $mod+f12 workspace number 22

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
bindsym $mod+Shift+f1 move container to workspace number 11
bindsym $mod+Shift+f2 move container to workspace number 12
bindsym $mod+Shift+f3 move container to workspace number 13
bindsym $mod+Shift+f4 move container to workspace number 14
bindsym $mod+Shift+f5 move container to workspace number 15
bindsym $mod+Shift+f6 move container to workspace number 16
bindsym $mod+Shift+f7 move container to workspace number 17
bindsym $mod+Shift+f8 move container to workspace number 18
bindsym $mod+Shift+f9 move container to workspace number 19
bindsym $mod+Shift+f10 move container to workspace number 20
bindsym $mod+Shift+f11 move container to workspace number 21
bindsym $mod+Shift+f12 move container to workspace number 22

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# Layout stuff:

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.

bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.

bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Screenshot and screen capture
bindsym Print exec grim - | tee $(xdg-user-dir PICTURES)/Screenshots/$(date +'Screenshot_%d-%m-%Y_%H-%M-%S.png') | wl-copy
bindsym $mod+p exec slurp | grim -g - - | tee $(xdg-user-dir PICTURES)/Screenshots/$(date +'Screenshot_%d-%m-%Y_%H-%M-%S.png') | wl-copy
bindsym $mod+g exec wf-recorder -f file.gif -c gif -g "$(slurp)"
bindsym $mod+Shift+g exec killall -s SIGINT wf-recorder

### Appearance

default_border pixel 2
default_floating_border normal
gaps inner 20
gaps outer 5
hide_edge_borders smart

font pango:Roboto 11

### Execute

# GTK theme configuration

set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Materia'
    gsettings set $gnome-schema icon-theme 'Papirus'
    #gsettings set $gnome-schema cursor-theme 'Your cursor Theme'
    #gsettings set $gnome-schema font-name 'Your font name'
}

exec_always {
    killall -q waybar
    while pgrep -x waybar > /dev/null; do sleep 1; done
    waybar --config ~/.config/waybar/top-bar.jsonc
    waybar --config ~/.config/waybar/bottom-bar.jsonc
}

include "/etc/sway/config.d/*"

# Generate and setup PyWal colorschemes
exec_always {
    ~/.config/wal/scripts/dunst.sh
    ~/.config/wal/scripts/telegram-palette-gen/telegram-palette-gen -w
    wal-telegram --wal -r
}

# Setup cron environment variables
exec ~/.local/bin/setup_cron_env.sh

### Window rules

for_window {
    [app_id="pavucontrol"] floating enable
    [app_id="nm-connection-editor"] floating enable
    [title="^Picture-in-Picture$"] floating enable; sticky enable; resize set 640 360; border none
    [title="(?:Open|Save) (?:File|Folder|As)"] floating enable; sticky enable
    [shell="xwayland"] title_format "%title [XWayland]"
    [window_role="pop-up"] floating enable
    [window_role="bubble"] floating enable
    [window_role="dialog"] floating enable
    [window_type="dialog"] floating enable
}
